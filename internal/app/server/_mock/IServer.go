// Code generated by mockery v2.52.1. DO NOT EDIT.

package _mock

import (
	mock "github.com/stretchr/testify/mock"
	errgroup "golang.org/x/sync/errgroup"
)

// IServer is an autogenerated mock type for the IServer type
type IServer struct {
	mock.Mock
}

// Name provides a mock function with no fields
func (_m *IServer) Name() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Name")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Shutdown provides a mock function with no fields
func (_m *IServer) Shutdown() {
	_m.Called()
}

// Start provides a mock function with given fields: eg
func (_m *IServer) Start(eg *errgroup.Group) {
	_m.Called(eg)
}

// NewIServer creates a new instance of IServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *IServer {
	mock := &IServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
