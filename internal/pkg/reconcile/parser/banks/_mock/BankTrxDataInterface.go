// Code generated by mockery v2.52.2. DO NOT EDIT.

package _mock

import (
	banks "simple-reconciliation-service/internal/pkg/reconcile/parser/banks"

	mock "github.com/stretchr/testify/mock"
)

// BankTrxDataInterface is an autogenerated mock type for the BankTrxDataInterface type
type BankTrxDataInterface struct {
	mock.Mock
}

// GetAbsAmount provides a mock function with no fields
func (_m *BankTrxDataInterface) GetAbsAmount() float64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAbsAmount")
	}

	var r0 float64
	if rf, ok := ret.Get(0).(func() float64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// GetAmount provides a mock function with no fields
func (_m *BankTrxDataInterface) GetAmount() float64 {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAmount")
	}

	var r0 float64
	if rf, ok := ret.Get(0).(func() float64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(float64)
	}

	return r0
}

// GetBank provides a mock function with no fields
func (_m *BankTrxDataInterface) GetBank() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetBank")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetDate provides a mock function with no fields
func (_m *BankTrxDataInterface) GetDate() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetDate")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetType provides a mock function with no fields
func (_m *BankTrxDataInterface) GetType() banks.TrxType {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetType")
	}

	var r0 banks.TrxType
	if rf, ok := ret.Get(0).(func() banks.TrxType); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(banks.TrxType)
	}

	return r0
}

// GetUniqueIdentifier provides a mock function with no fields
func (_m *BankTrxDataInterface) GetUniqueIdentifier() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetUniqueIdentifier")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ToBankTrxData provides a mock function with no fields
func (_m *BankTrxDataInterface) ToBankTrxData() (*banks.BankTrxData, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ToBankTrxData")
	}

	var r0 *banks.BankTrxData
	var r1 error
	if rf, ok := ret.Get(0).(func() (*banks.BankTrxData, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *banks.BankTrxData); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*banks.BankTrxData)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewBankTrxDataInterface creates a new instance of BankTrxDataInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBankTrxDataInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *BankTrxDataInterface {
	mock := &BankTrxDataInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
